package ms_312.CheckMeBackend.Messages;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import ms_312.CheckMeBackend.Users.RetrieverOwner;

/**
 * Abstract class that contains the API used by platform specific classes for retrieving messages
 * from different sources.
 */
@Entity
public abstract class MessageRetriever {
    /**
     * Unique Identifier for this retriever used to store it in a database. Generated by the persistence API.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    protected int id;

    /**
     * A string containing the complete URL for the API endpoint to retrieve the Messages from
     */
    protected String source;

    /**
     * @param source A complete URL pointing to the API location this Retriever should get Messages from
     * @param owner The {@link RetrieverOwner} that this reriever should get messages for
     */
    public MessageRetriever(String source, RetrieverOwner owner) {
        this.source = source;
        this.owner = owner;
    }

    /**
     * Default constructor for Persistence API
     */
    protected MessageRetriever() {}


    /**
     * The user which for which this retriever gets messages for
     */
    @ManyToOne
    @JoinColumn(name = "user_id")
    @JsonIgnore
    private RetrieverOwner owner;

    /**
     * Get all the Messages provided by the {@link MessageRetriever#source} for this Retriever
     *
     * @return An array of {@link Message} objects corresponding to all the retrieved messages.
     */
    public abstract Message[] getAll();

    /**
     * @return The {@link RetrieverOwner} this retriever gets messages  for
     */
    public RetrieverOwner getOwner() {
        return owner;
    }

    /**
     * Set the User this retriever gets messages for
     * @param owner User object to set this retriever to
     */
    public void setOwner(RetrieverOwner owner) {
        this.owner = owner;
    }

    /**
     * @return The numerical ID assigned to this Retriever by the persistence API
     */
    public int getId() {
        return id;
    }

    /**
     * @return The string holding the URL to the API endpoint this retriever gets messages from
     */
    public String getSource() {
        return source;
    }





}
